// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Kitsu.Responses;
//
//    var userLibraryEventGetResponse = UserLibraryEventGetResponse.FromJson(jsonString);

namespace Kitsu.Responses
{
    using Newtonsoft.Json;
    using System;
    using static Kitsu.Converters.Converter;

    public partial class UserLibraryEventGetResponse
    {
        [JsonProperty("data", NullValueHandling = NullValueHandling.Ignore)]
        public Datum[] Data { get; set; }

        [JsonProperty("included", NullValueHandling = NullValueHandling.Ignore)]
        public IncludedItems[] Included { get; set; }

        [JsonProperty("meta", NullValueHandling = NullValueHandling.Ignore)]
        public Meta MetaData { get; set; }

        [JsonProperty("links", NullValueHandling = NullValueHandling.Ignore)]
        public UserLibraryEventGetResponseLinks Links { get; set; }

        public partial class Datum
        {
            [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
            [JsonConverter(typeof(ParseStringConverter))]
            public long? Id { get; set; }

            [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
            public DatumType? Type { get; set; }

            [JsonProperty("links", NullValueHandling = NullValueHandling.Ignore)]
            public DatumLinks Links { get; set; }

            [JsonProperty("attributes", NullValueHandling = NullValueHandling.Ignore)]
            public DatumAttributes Attributes { get; set; }

            [JsonProperty("relationships", NullValueHandling = NullValueHandling.Ignore)]
            public DatumRelationships Relationships { get; set; }
        }

        public partial class DatumAttributes
        {
            [JsonProperty("createdAt", NullValueHandling = NullValueHandling.Ignore)]
            public DateTimeOffset? CreatedAt { get; set; }

            [JsonProperty("changedData", NullValueHandling = NullValueHandling.Ignore)]
            public ChangedData ChangedData { get; set; }

            [JsonProperty("kind", NullValueHandling = NullValueHandling.Ignore)]
            public Kind? Kind { get; set; }
        }

        public partial class ChangedData
        {
            [JsonProperty("progress", NullValueHandling = NullValueHandling.Ignore)]
            public long[] Progress { get; set; }

            [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
            public string[] Status { get; set; }

            [JsonProperty("time_spent", NullValueHandling = NullValueHandling.Ignore)]
            public long[] TimeSpent { get; set; }
        }

        public partial class DatumLinks
        {
            [JsonProperty("self", NullValueHandling = NullValueHandling.Ignore)]
            public Uri Self { get; set; }
        }

        public partial class DatumRelationships
        {
            [JsonProperty("libraryEntry", NullValueHandling = NullValueHandling.Ignore)]
            public LibraryEntry LibraryEntry { get; set; }

            [JsonProperty("anime", NullValueHandling = NullValueHandling.Ignore)]
            public Anime Anime { get; set; }
        }

        public partial class Anime
        {
            [JsonProperty("links", NullValueHandling = NullValueHandling.Ignore)]
            public AnimeLinks Links { get; set; }
        }

        public partial class AnimeLinks
        {
            [JsonProperty("self", NullValueHandling = NullValueHandling.Ignore)]
            public Uri Self { get; set; }

            [JsonProperty("related", NullValueHandling = NullValueHandling.Ignore)]
            public Uri Related { get; set; }
        }

        public partial class LibraryEntry
        {
            [JsonProperty("links", NullValueHandling = NullValueHandling.Ignore)]
            public AnimeLinks Links { get; set; }

            [JsonProperty("data", NullValueHandling = NullValueHandling.Ignore)]
            public LibraryEntryData Data { get; set; }
        }

        public partial class LibraryEntryData
        {
            [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
            public DataType? Type { get; set; }

            [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
            [JsonConverter(typeof(ParseStringConverter))]
            public long? Id { get; set; }
        }

        public partial class IncludedItems
        {
            [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
            [JsonConverter(typeof(ParseStringConverter))]
            public long Id { get; set; }

            [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
            public DataType? Type { get; set; }

            [JsonProperty("links", NullValueHandling = NullValueHandling.Ignore)]
            public DatumLinks Links { get; set; }

            [JsonProperty("attributes", NullValueHandling = NullValueHandling.Ignore)]
            public IncludedAttributes Attributes { get; set; }

            [JsonProperty("relationships", NullValueHandling = NullValueHandling.Ignore)]
            public IncludedRelationships Relationships { get; set; }
        }

        public partial class IncludedAttributes
        {
            [JsonProperty("createdAt", NullValueHandling = NullValueHandling.Ignore)]
            public DateTimeOffset? CreatedAt { get; set; }

            [JsonProperty("updatedAt", NullValueHandling = NullValueHandling.Ignore)]
            public DateTimeOffset? UpdatedAt { get; set; }

            [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
            public string Status { get; set; }

            [JsonProperty("progress", NullValueHandling = NullValueHandling.Ignore)]
            public long? Progress { get; set; }

            [JsonProperty("volumesOwned", NullValueHandling = NullValueHandling.Ignore)]
            public long? VolumesOwned { get; set; }

            [JsonProperty("reconsuming", NullValueHandling = NullValueHandling.Ignore)]
            public bool? Reconsuming { get; set; }

            [JsonProperty("reconsumeCount", NullValueHandling = NullValueHandling.Ignore)]
            public long? ReconsumeCount { get; set; }

            [JsonProperty("notes")]
            public object Notes { get; set; }

            [JsonProperty("private", NullValueHandling = NullValueHandling.Ignore)]
            public bool? Private { get; set; }

            [JsonProperty("reactionSkipped", NullValueHandling = NullValueHandling.Ignore)]
            public string ReactionSkipped { get; set; }

            [JsonProperty("progressedAt", NullValueHandling = NullValueHandling.Ignore)]
            public DateTimeOffset? ProgressedAt { get; set; }

            [JsonProperty("startedAt", NullValueHandling = NullValueHandling.Ignore)]
            public DateTimeOffset? StartedAt { get; set; }

            [JsonProperty("finishedAt")]
            public DateTimeOffset? FinishedAt { get; set; }

            [JsonProperty("rating", NullValueHandling = NullValueHandling.Ignore)]
            public string Rating { get; set; }

            [JsonProperty("ratingTwenty")]
            public object RatingTwenty { get; set; }
        }

        public partial class IncludedRelationships
        {
            [JsonProperty("user", NullValueHandling = NullValueHandling.Ignore)]
            public Anime User { get; set; }

            [JsonProperty("anime", NullValueHandling = NullValueHandling.Ignore)]
            public Anime Anime { get; set; }

            [JsonProperty("manga", NullValueHandling = NullValueHandling.Ignore)]
            public Anime Manga { get; set; }

            [JsonProperty("drama", NullValueHandling = NullValueHandling.Ignore)]
            public Anime Drama { get; set; }

            [JsonProperty("review", NullValueHandling = NullValueHandling.Ignore)]
            public Anime Review { get; set; }

            [JsonProperty("mediaReaction", NullValueHandling = NullValueHandling.Ignore)]
            public Anime MediaReaction { get; set; }

            [JsonProperty("media", NullValueHandling = NullValueHandling.Ignore)]
            public Anime Media { get; set; }

            [JsonProperty("unit", NullValueHandling = NullValueHandling.Ignore)]
            public Anime Unit { get; set; }

            [JsonProperty("nextUnit", NullValueHandling = NullValueHandling.Ignore)]
            public Anime NextUnit { get; set; }
        }

        public partial class UserLibraryEventGetResponseLinks
        {
            [JsonProperty("first", NullValueHandling = NullValueHandling.Ignore)]
            public Uri First { get; set; }

            [JsonProperty("next", NullValueHandling = NullValueHandling.Ignore)]
            public Uri Next { get; set; }

            [JsonProperty("last", NullValueHandling = NullValueHandling.Ignore)]
            public Uri Last { get; set; }
        }

        public partial class Meta
        {
            [JsonProperty("count", NullValueHandling = NullValueHandling.Ignore)]
            public long? Count { get; set; }
        }

        public enum Kind { Progressed, Updated };

        public enum DataType { LibraryEntries };

        public enum DatumType { LibraryEvents };

        public static UserLibraryEventGetResponse FromJson(string json) => JsonConvert.DeserializeObject<UserLibraryEventGetResponse>(json, Kitsu.Converters.Converter.Settings);
    }
}
