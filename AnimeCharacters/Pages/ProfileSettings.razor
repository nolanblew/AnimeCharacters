@page "/profile-settings"
@using AnimeCharacters.Models
@using AnimeCharacters.Services
@using AnimeCharacters.Components
@inherits BasePage
@implements EventAggregator.Blazor.IHandle<Events.DatabaseEvent>
@inject IJSRuntime JSRuntime

<div class="flex-container">
    <div class="control">
        <h1>Profile Settings</h1>
    </div>

    <div class="main-content profile-settings-content">
        @if (CurrentUser != null)
        {
            <div class="profile-section">
                <h3>Profile Information</h3>
                
                <div class="profile-info">
                    @if (!string.IsNullOrWhiteSpace(CurrentUser.AvatarUrl))
                    {
                        <img src="@CurrentUser.AvatarUrl" class="profile-avatar" alt="Profile Avatar" />
                    }
                    
                    <div class="profile-details">
                        <div class="form-group">
                            <label class="form-label">Name</label>
                            <input type="text" class="form-control" value="@CurrentUser.Name" readonly />
                        </div>
                        
                        @if (!string.IsNullOrWhiteSpace(CurrentUser.Username) && CurrentUser.Username != CurrentUser.Name)
                        {
                            <div class="form-group">
                                <label class="form-label">Username</label>
                                <input type="text" class="form-control" value="@CurrentUser.Username" readonly />
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="providers-section">
                <h3>Data Providers</h3>
                <p class="section-description">
                    Manage your data sources. These providers supply information about anime, characters, and voice actors.
                </p>
                
                <div class="providers-grid">
                    @if (InstalledProviders != null)
                    {
                        @foreach (var provider in InstalledProviders)
                        {
                            <ProviderCard 
                                Provider="provider" 
                                CanRemove="@(ProviderCanBeRemoved.GetValueOrDefault(provider.Id, false))"
                                OnRemove="HandleRemoveProvider" />
                        }
                    }
                    
                    <div class="add-provider-card" @onclick="OpenProviderStore">
                        <div class="add-provider-content">
                            <div class="add-provider-icon">
                                <i class="oi oi-plus"></i>
                            </div>
                            <h4 class="add-provider-title">Add Provider</h4>
                            <p class="add-provider-description">
                                Discover new data sources to enhance your anime experience
                            </p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="settings-section">
                <h3>App Settings</h3>
                
                <div class="form-group">
                    <label class="form-label">Preferred Title Type</label>
                    <select class="form-control" @bind="SelectedTitleType" @bind:after="OnTitleTypeChanged">
                        <option value="@TitleType.UserPreferred">Default (User Preferred)</option>
                        <option value="@TitleType.Romaji">Romaji</option>
                        <option value="@TitleType.English">English</option>
                        <option value="@TitleType.Native">Native (Japanese)</option>
                    </select>
                </div>
            </div>

            <div class="app-info-section">
                <h3>App Information</h3>
                
                <div class="form-group">
                    <label class="form-label">App Version</label>
                    <div class="version-info">
                        <span class="version-text">@AppVersion</span>
                        @if (UpdateAvailable)
                        {
                            <button type="button" class="btn btn-primary btn-sm ml-2" @onclick="UpdateApp">
                                Update Available
                            </button>
                        }
                    </div>
                </div>
            </div>

            <div class="logout-section">
                <button type="button" class="btn btn-danger" @onclick="LogoutAsync">
                    Logout
                </button>
                <div class="logout-description">
                    This will delete your user token, clear all cached data, and return you to the login screen.
                </div>
            </div>
        }
    </div>
</div>

<ProviderStoreModal 
    IsVisible="@ShowProviderStore" 
    OnClose="CloseProviderStore"
    OnProvidersChanged="RefreshProviders" />