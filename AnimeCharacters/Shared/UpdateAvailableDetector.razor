@using EventAggregator.Blazor
@implements IUpdateAvailableDetector
@inject IJSRuntime _jsRuntime
@inject IEventAggregator _eventAggregator

@code {
    protected override async Task OnInitializedAsync()
    {
        await RegisterForUpdateAvailableNotification();
    }

    private async Task RegisterForUpdateAvailableNotification()
    {
        await _jsRuntime.InvokeAsync<object>(
            identifier: "registerForUpdateAvailableNotification",
            DotNetObjectReference.Create(this),
            nameof(OnUpdateAvailable));
    }

    [JSInvokable(nameof(OnUpdateAvailable))]
    public async Task OnUpdateAvailable()
    {
        await _eventAggregator.PublishAsync(new Events.SnackbarEvent("Update available! Click here to reload."));
        StateHasChanged();
    }

    public async Task CheckForUpdate()
    {
        await _jsRuntime.InvokeVoidAsync("checkForUpdate");
    }
}
