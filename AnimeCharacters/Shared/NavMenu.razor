@inherits Pages.BasePage

<nav class="navbar navbar-expand-sm navbar-light bg-light">
    @if (PageStateManager.CanGoBack)
    {
    <div class="nav-item" style="display: flex; align-items: center;">
        <a class="nav-link" href="@PageStateManager.GetLastPage()" @onclick="_GoBack">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z" />
            </svg>
        </a>
    </div>
    }
    <a class="navbar-brand" href="#">
        <img src="/icon-512.png" width="30" height="30" alt="Anime Characters" />
        Anime Characters
    </a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item">
                <a class="nav-link" href="/animes">Animes <span class="sr-only">(current)</span></a>
            </li>
        </ul>
        <span class="navbar-text">
            Hello, @CurrentUser?.Name!
        </span>
        <div class="nav-item">
            <a class="nav-link" href="/?logout=true">Logout</a>
        </div>
        <div class="nav-item">
            <a class="nav-link text-muted" href="#">Settings</a>
        </div>
    </div>
</nav>

@code {
    protected override async Task OnInitializedAsync()
    {
        CurrentUser = await DatabaseProvider.GetUserAsync();

        PageStateManager.PropertyChanged += (_, _) => StateHasChanged();

        await base.OnInitializedAsync();
    }

    public Kitsu.Models.User CurrentUser { get; set; }

    public bool IsLoggedIn => CurrentUser != null;

    void _GoBack()
    {
        if (PageStateManager.CanGoBack)
        {
            NavigationManager.NavigateTo(PageStateManager.GoBack());
        }
    }
}
